{"ast":null,"code":"var _jsxFileName = \"/Users/carinarobinson/Desktop/React_Developer_Course/E-commerce/crown_clothing/src/pages/shop/shop.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport { withSpinner } from '../../components/with-spinner/with-spinner.component';\nconst CollectionsOverviewWithSpinner = withSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = withSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapShot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    this.unsubscribeFromSnapShot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      loading\n    } = this.state;\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, {\n        isLoading: loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 32\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, {\n        isLoading: loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 32\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/carinarobinson/Desktop/React_Developer_Course/E-commerce/crown_clothing/src/pages/shop/shop.jsx"],"names":["React","Route","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","connect","updateCollections","withSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapShot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,iBAAR,QAAgC,+BAAhC;AACA,SAAQC,WAAR,QAA0B,sDAA1B;AAGA,MAAMC,8BAA8B,GAAGD,WAAW,CAACN,mBAAD,CAAlD;AACA,MAAMQ,yBAAyB,GAAGF,WAAW,CAACL,cAAD,CAA7C;;AAGA,MAAMQ,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAEnCC,KAFmC,GAE3B;AACJC,MAAAA,OAAO,EAAG;AADN,KAF2B;AAAA,SAMvCC,uBANuC,GAMb,IANa;AAAA;;AASvCC,EAAAA,iBAAiB,GAAE;AAEnB,UAAM;AAACT,MAAAA;AAAD,QAAsB,KAAKU,KAAjC;AACA,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AAEA,SAAKJ,uBAAL,GAA+BG,aAAa,CAACE,UAAd,CAA0B,MAAMC,QAAN,IAAkB;AACvE,YAAMC,cAAc,GAAGjB,+BAA+B,CAACgB,QAAD,CAAtD;AACAd,MAAAA,iBAAiB,CAACe,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAACT,QAAAA,OAAO,EAAG;AAAX,OAAd;AACH,KAJ8B,CAA/B;AAOC;;AAEDU,EAAAA,MAAM,GAAE;AAEJ,UAAM;AAACV,MAAAA;AAAD,QAAY,KAAKD,KAAvB;AACA,UAAM;AAACY,MAAAA;AAAD,QAAU,KAAKR,KAArB;AACA,wBACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AACI,MAAA,KAAK,MADT;AACU,MAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,EAD9B;AAEI,MAAA,MAAM,EAAGT,KAAD,iBAAW,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEH,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAKI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAG,GAAEW,KAAK,CAACC,IAAK,gBADxB;AAEI,MAAA,MAAM,EAAGT,KAAD,iBAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEH,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADA;AAYH;;AAvCsC;;AA0CvC,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AAEpCrB,EAAAA,iBAAiB,EAAEe,cAAc,IAEjCM,QAAQ,CAACrB,iBAAiB,CAACe,cAAD,CAAlB;AAJ4B,CAAL,CAAnC;;AASA,eAAehB,OAAO,CAAC,IAAD,EAAOqB,kBAAP,CAAP,CAAkChB,QAAlC,CAAf","sourcesContent":["import React from 'react';\nimport {Route} from 'react-router-dom';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection';\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\nimport {connect} from 'react-redux';\nimport {updateCollections} from '../../redux/shop/shop.actions';\nimport {withSpinner} from '../../components/with-spinner/with-spinner.component';\n\n\nconst CollectionsOverviewWithSpinner = withSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = withSpinner(CollectionPage);\n\n\nclass ShopPage extends React.Component {\n \n    state = {\n        loading : true\n    }\n\nunsubscribeFromSnapShot = null; \n\n\ncomponentDidMount(){\n\nconst {updateCollections} = this.props;\nconst collectionRef = firestore.collection('collections')\n\nthis.unsubscribeFromSnapShot = collectionRef.onSnapshot( async snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n    updateCollections(collectionsMap)\n    this.setState({loading : false});\n})\n\n\n}\n\nrender(){\n\n    const {loading} = this.state\n    const {match} = this.props\n    return ( \n    <div className=\"shop-page\">\n        <Route \n            exact path={`${match.path}`} \n            render={(props) => <CollectionsOverviewWithSpinner isLoading={loading} /> }\n        ></Route>\n        <Route \n            path={`${match.path}/:collectionId`} \n            render={(props) => <CollectionPageWithSpinner isLoading={loading} /> }\n        ></Route>\n    </div>\n    )\n}}\n\n\nconst mapDispatchToProps = dispatch => ({\n\n    updateCollections: collectionsMap => \n\n    dispatch(updateCollections(collectionsMap))\n\n\n});\n    \nexport default connect(null, mapDispatchToProps)(ShopPage);    "]},"metadata":{},"sourceType":"module"}