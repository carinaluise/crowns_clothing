{"ast":null,"code":"var _jsxFileName = \"/Users/carinarobinson/Desktop/React_Developer_Course/E-commerce/crown_clothing/src/pages/shop/shop.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport withSpinner from '../../components/with-spinner/with-spinner.component';\nimport { selectCollection } from '../../redux/shop/shop.selector';\nconst CollectionsOverviewWithSpinner = withSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = withSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapShot = null;\n  }\n\n  componentDidMount() {// const {updateCollections} = this.props;\n  }\n\n  render() {\n    const {\n      loading\n    } = this.state;\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 32\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 32\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/carinarobinson/Desktop/React_Developer_Course/E-commerce/crown_clothing/src/pages/shop/shop.jsx"],"names":["React","Route","CollectionsOverview","CollectionPage","connect","updateCollections","withSpinner","selectCollection","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","unsubscribeFromSnapShot","componentDidMount","render","loading","state","match","props","path","mapStateToProps","ownProps","collection","params","collectionId","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,iBAAR,QAAgC,+BAAhC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AAEA,MAAMC,8BAA8B,GAAGF,WAAW,CAACJ,mBAAD,CAAlD;AACA,MAAMO,yBAAyB,GAAGH,WAAW,CAACH,cAAD,CAA7C;;AAEA,MAAMO,QAAN,SAAuBV,KAAK,CAACW,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAEvCC,uBAFuC,GAEb,IAFa;AAAA;;AAIvCC,EAAAA,iBAAiB,GAAE,CAEnB;AAGC;;AAEDC,EAAAA,MAAM,GAAE;AAEJ,UAAM;AAACC,MAAAA;AAAD,QAAY,KAAKC,KAAvB;AACA,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKC,KAArB;AACA,wBACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AACI,MAAA,KAAK,MADT;AACU,MAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAD9B;AAEI,MAAA,MAAM,EAAGD,KAAD,iBAAW,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEH;AAA3C,SAAwDG,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAKI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,gBADxB;AAEI,MAAA,MAAM,EAAGD,KAAD,iBAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEH;AAAtC,SAAmDG,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADA;AAYH;;AA3BsC;;AA6BvC,MAAME,eAAe,GAAG,CAACJ,KAAD,EAAQK,QAAR,MAAsB;AAC1CC,EAAAA,UAAU,EAAGf,gBAAgB,CAACc,QAAQ,CAACJ,KAAT,CAAeM,MAAf,CAAsBC,YAAvB,CAAhB,CAAqDR,KAArD;AAD6B,CAAtB,CAAxB;;AAIA,MAAMS,kBAAkB,GAAGC,QAAQ,KAAK;AAEpCrB,EAAAA,iBAAiB,EAAEsB,cAAc,IAEjCD,QAAQ,CAACrB,iBAAiB,CAACsB,cAAD,CAAlB;AAJ4B,CAAL,CAAnC;;AAQA,eAAevB,OAAO,CAACgB,eAAD,EAAkBK,kBAAlB,CAAP,CAA6Cf,QAA7C,CAAf","sourcesContent":["import React from 'react';\nimport {Route} from 'react-router-dom';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection';\nimport {connect} from 'react-redux';\nimport {updateCollections} from '../../redux/shop/shop.actions';\nimport withSpinner from '../../components/with-spinner/with-spinner.component';\nimport { selectCollection } from '../../redux/shop/shop.selector';\n\nconst CollectionsOverviewWithSpinner = withSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = withSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n \nunsubscribeFromSnapShot = null; \n\ncomponentDidMount(){\n\n// const {updateCollections} = this.props;\n\n\n}\n\nrender(){\n\n    const {loading} = this.state\n    const {match} = this.props\n    return ( \n    <div className=\"shop-page\">\n        <Route \n            exact path={`${match.path}`} \n            render={(props) => <CollectionsOverviewWithSpinner isLoading={loading} {...props}/> }\n        ></Route>\n        <Route \n            path={`${match.path}/:collectionId`} \n            render={(props) => <CollectionPageWithSpinner isLoading={loading} {...props} /> }\n        ></Route>\n    </div>\n    )\n}}\n\nconst mapStateToProps = (state, ownProps) => ({\n    collection : selectCollection(ownProps.match.params.collectionId)(state)    \n});\n\nconst mapDispatchToProps = dispatch => ({\n\n    updateCollections: collectionsMap => \n\n    dispatch(updateCollections(collectionsMap))\n\n});\n    \nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);    "]},"metadata":{},"sourceType":"module"}