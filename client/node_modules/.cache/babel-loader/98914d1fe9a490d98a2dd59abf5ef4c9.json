{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyAkR_SE_ZlDLmYBjMqfACAWIcJEgZnFswg\",\n  authDomain: \"crown-clothing-3f2af.firebaseapp.com\",\n  databaseURL: \"https://crown-clothing-3f2af.firebaseio.com\",\n  projectId: \"crown-clothing-3f2af\",\n  storageBucket: \"crown-clothing-3f2af.appspot.com\",\n  messagingSenderId: \"822324814438\",\n  appId: \"1:822324814438:web:0721707835efa07e33c3a7\",\n  measurementId: \"G-TYW6JJ6R09\"\n};\nfirebase.initializeApp(config);\nexport const createUserProfile = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n  console.log(snapShot);\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/carinarobinson/Desktop/React_Developer_Course/E-commerce/crown_clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfile","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","console","log","exists","displayName","email","createdAt","Date","set","error","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACPC,EAAAA,MAAM,EAAE,yCADD;AAEPC,EAAAA,UAAU,EAAE,sCAFL;AAGPC,EAAAA,WAAW,EAAE,6CAHN;AAIPC,EAAAA,SAAS,EAAE,sBAJJ;AAKPC,EAAAA,aAAa,EAAE,kCALR;AAMPC,EAAAA,iBAAiB,EAAE,cANZ;AAOPC,EAAAA,KAAK,EAAE,2CAPA;AAQPC,EAAAA,aAAa,EAAE;AARR,CAAf;AAWET,QAAQ,CAACU,aAAT,CAAuBT,MAAvB;AAEI,OAAO,MAAMU,iBAAiB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAqC;AAEpE,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AAEA,MAAG,CAACA,QAAQ,CAACI,MAAb,EAAoB;AAElB,UAAM;AAACC,MAAAA,WAAD;AAAcC,MAAAA;AAAd,QAAuBZ,QAA7B;AACA,UAAMa,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACF,YAAMZ,OAAO,CAACa,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGZ;AAJa,OAAZ,CAAN;AAMD,KAPD,CAOE,OAAOe,KAAP,EAAa;AACbR,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAqCO,KAAK,CAACC,OAA3C;AACD;AACF;;AAEH,SAAOf,OAAP;AAEG,CA7BI;AA+Bb,OAAO,MAAMgB,yBAAyB,GAAG,OAAOC,aAAP,EAAsBC,YAAtB,KAAuC;AAE5E,QAAMC,aAAa,GAAGlB,SAAS,CAACmB,UAAV,CAAqBH,aAArB,CAAtB;AAEA,QAAMI,KAAK,GAAGpB,SAAS,CAACoB,KAAV,EAAd;AAEAH,EAAAA,YAAY,CAACI,OAAb,CAAqBC,GAAG,IAAI;AAE5B,UAAMC,SAAS,GAAGL,aAAa,CAACjB,GAAd,EAAlB;AAEAmB,IAAAA,KAAK,CAACR,GAAN,CAAUW,SAAV,EAAqBD,GAArB;AAED,GANC;AAQF,SAAO,MAAMF,KAAK,CAACI,MAAN,EAAb;AACC,CAfI;AAiBP,OAAO,MAAMC,IAAI,GAAGxC,QAAQ,CAACwC,IAAT,EAAb;AACP,OAAO,MAAMzB,SAAS,GAAGf,QAAQ,CAACe,SAAT,EAAlB;AAEP,MAAM0B,QAAQ,GAAG,IAAIzC,QAAQ,CAACwC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAGP,eAAezC,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n        apiKey: \"AIzaSyAkR_SE_ZlDLmYBjMqfACAWIcJEgZnFswg\",\n        authDomain: \"crown-clothing-3f2af.firebaseapp.com\",\n        databaseURL: \"https://crown-clothing-3f2af.firebaseio.com\",\n        projectId: \"crown-clothing-3f2af\",\n        storageBucket: \"crown-clothing-3f2af.appspot.com\",\n        messagingSenderId: \"822324814438\",\n        appId: \"1:822324814438:web:0721707835efa07e33c3a7\",\n        measurementId: \"G-TYW6JJ6R09\"\n      };\n\n  firebase.initializeApp(config);\n\n      export const createUserProfile = async (userAuth, additionalData ) => {\n\n        if(!userAuth) return;\n        \n        const userRef = firestore.doc(`users/${userAuth.uid}`);\n        \n        const snapShot = await userRef.get();\n        \n        console.log(snapShot);\n        \n        if(!snapShot.exists){\n\n          const {displayName, email} = userAuth;\n          const createdAt = new Date();\n\n          try {\n            await userRef.set({\n              displayName,\n              email,\n              createdAt,\n              ...additionalData \n            })\n          } catch (error){\n            console.log('error creating user' ,  error.message)\n          }\n        }\n\n      return userRef;\n\n        }\n\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n\t\n    const collectionRef = firestore.collection(collectionKey);\n  \n    const batch = firestore.batch();\n\n    objectsToAdd.forEach(obj => {\n  \n    const newDocRef = collectionRef.doc()\n  \n    batch.set(newDocRef, obj);\n\n  });\n  \n  return await batch.commit();\n  }\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account'});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\n\nexport default firebase;\n\n\n"]},"metadata":{},"sourceType":"module"}