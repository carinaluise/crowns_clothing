{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport rootReducer from './root-reducer';\nimport { persistStore } from 'redux-persist';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './root-saga';\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(rootSaga); // ORDER MATTERS HERE MUST BE AFTER THE CREATESTORE FUNCTION\n\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["/Users/carinarobinson/Desktop/React_Developer_Course/E-commerce/crown_clothing/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","rootReducer","persistStore","createSagaMiddleware","rootSaga","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAAQC,YAAR,QAA0B,eAA1B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,MAAMC,cAAc,GAAGF,oBAAoB,EAA3C;AAGA,MAAMG,WAAW,GAAG,CAACD,cAAD,CAApB;;AAIA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA2C;AACvCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBV,MAAjB;AACH;;AAGD,OAAO,MAAMW,KAAK,GAAGb,WAAW,CAAEG,WAAF,EAAeF,eAAe,CAAC,GAAGO,WAAJ,CAA9B,CAAzB;AAEPD,cAAc,CAACO,GAAf,CAAmBR,QAAnB,E,CAA6B;;AAE7B,OAAO,MAAMS,SAAS,GAAGX,YAAY,CAACS,KAAD,CAA9B;AAEP,eAAe;AAACA,EAAAA,KAAD;AAAQE,EAAAA;AAAR,CAAf","sourcesContent":["import {createStore, applyMiddleware} from 'redux';\nimport logger from 'redux-logger';\nimport rootReducer from './root-reducer';\nimport {persistStore}from 'redux-persist';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './root-saga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\n\nconst middlewares = [sagaMiddleware];\n\n\n\nif (process.env.NODE_ENV === 'development'){\n    middlewares.push(logger);\n}\n\n\nexport const store = createStore (rootReducer, applyMiddleware(...middlewares))\n\nsagaMiddleware.run(rootSaga) // ORDER MATTERS HERE MUST BE AFTER THE CREATESTORE FUNCTION\n\nexport const persistor = persistStore(store);\n\nexport default {store, persistor};\n\n"]},"metadata":{},"sourceType":"module"}