{"ast":null,"code":"var _jsxFileName = \"/Users/carinarobinson/Desktop/React_Developer_Course/E-commerce/crown_clothing/client/src/App.js\";\nimport React, { useEffect } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom'; // import {auth, createUserProfile} from './firebase/firebase.utils';\n\nimport { connect } from 'react-redux';\nimport { checkUserSession } from './redux/user/user.actions';\nimport { selectCurrentUser } from './redux/user/user.selectors';\nimport { createStructuredSelector } from 'reselect'; // import {selectCollectionsForPreview} from './redux/shop/shop.selector';\n\nimport './App.css';\nimport { HomePage } from './pages/homepage/homepage';\nimport ShopPage from './pages/shop/shop';\nimport SignInAndSignUp from './pages/sign-in-and-sign-up/sign-in-and-sign-up';\nimport CheckoutPage from './pages/checkout/checkout';\nimport Header from './components/header/header.component';\n\nconst App = ({\n  checkUserSession,\n  currentUser\n}) => {\n  useEffect(() => {\n    checkUserSession();\n  }, [checkUserSession]); // END ARRAY MEANS : CHECK USER SESSION ONLY WHEN USER SESSION CHANGES\n  // unsubscribeFromAuth = null;\n  // componentDidMount(){\n  //   const {checkUserSession} = this.props;\n  //   checkUserSession();\n  //   const {setCurrentUser} = this.props;\n  //     this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n  //       if(userAuth) {\n  //         const userRef = await createUserProfile(userAuth)\n  //         userRef.onSnapshot(snapShot => {\n  //           setCurrentUser({\n  //               id: snapShot.id,\n  //               ...snapShot.data()\n  //           }) \n  //         })\n  //       }\n  //     setCurrentUser(userAuth);\n  //     // addCollectionAndDocuments('collections', collectionsArray.map(({title, items}) => ({title,items})));\n  //   });\n  // }\n  // componentWillUnmount(){\n  //   this.unsubscribeFromAuth();\n  // } \n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: HomePage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/shop\",\n    component: ShopPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/sign-in\",\n    render: () => currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 62\n      }\n    }) : /*#__PURE__*/React.createElement(SignInAndSignUp, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 86\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/checkout\",\n    component: CheckoutPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser // collectionsArray: selectCollectionsForPreview\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n  // setCurrentUser: user => dispatch(setCurrentUser(user))\n  checkUserSession: () => dispatch(checkUserSession())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/carinarobinson/Desktop/React_Developer_Course/E-commerce/crown_clothing/client/src/App.js"],"names":["React","useEffect","Switch","Route","Redirect","connect","checkUserSession","selectCurrentUser","createStructuredSelector","HomePage","ShopPage","SignInAndSignUp","CheckoutPage","Header","App","currentUser","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,QAAvB,QAAsC,kBAAtC,C,CACA;;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,gBAAR,QAAgC,2BAAhC;AACA,SAAQC,iBAAR,QAAgC,6BAAhC;AACA,SAAQC,wBAAR,QAAuC,UAAvC,C,CACA;;AACA,OAAO,WAAP;AACA,SAAQC,QAAR,QAAuB,2BAAvB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,eAAP,MAA4B,iDAA5B;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;;AAGA,MAAMC,GAAG,GAAG,CAAC;AAACR,EAAAA,gBAAD;AAAmBS,EAAAA;AAAnB,CAAD,KAAqC;AAEjDd,EAAAA,SAAS,CAAE,MAAK;AACfK,IAAAA,gBAAgB;AAChB,GAFQ,EAEN,CAACA,gBAAD,CAFM,CAAT,CAFiD,CAMjD;AAEE;AAEA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;;AAEC,sBAAQ;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACP,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,eAEL,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAEG,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,SAAS,EAAEC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,MAAM,EAAG,MAAMK,WAAW,gBAAI,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ,gBAA4B,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,WAAlB;AAA8B,IAAA,SAAS,EAAEH,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAFK,CAAR;AAUF,CAlDD;;AAqDA,MAAMI,eAAe,GAAGR,wBAAwB,CAAC;AAC/CO,EAAAA,WAAW,EAAER,iBADkC,CAE/C;;AAF+C,CAAD,CAAhD;;AAOA,MAAMU,kBAAkB,GAAGC,QAAQ,KAAK;AACtC;AACAZ,EAAAA,gBAAgB,EAAE,MAAMY,QAAQ,CAACZ,gBAAgB,EAAjB;AAFM,CAAL,CAAnC;;AAKA,eAAeD,OAAO,CAACW,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CH,GAA7C,CAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport {Switch, Route, Redirect} from 'react-router-dom';\n// import {auth, createUserProfile} from './firebase/firebase.utils';\nimport {connect} from 'react-redux';\nimport {checkUserSession } from './redux/user/user.actions';\nimport {selectCurrentUser} from './redux/user/user.selectors';\nimport {createStructuredSelector} from 'reselect';\n// import {selectCollectionsForPreview} from './redux/shop/shop.selector';\nimport './App.css';\nimport {HomePage} from './pages/homepage/homepage';\nimport ShopPage from './pages/shop/shop';\nimport SignInAndSignUp from './pages/sign-in-and-sign-up/sign-in-and-sign-up';\nimport CheckoutPage from './pages/checkout/checkout';\nimport Header from './components/header/header.component';\n\n\nconst App = ({checkUserSession, currentUser}) => {\n\nuseEffect (()=> {\n checkUserSession()\n}, [checkUserSession])\n\n// END ARRAY MEANS : CHECK USER SESSION ONLY WHEN USER SESSION CHANGES\n\n  // unsubscribeFromAuth = null;\n\n  // componentDidMount(){\n\n  //   const {checkUserSession} = this.props;\n  //   checkUserSession();\n\n  //   const {setCurrentUser} = this.props;\n\n  //     this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      \n  //       if(userAuth) {\n  //         const userRef = await createUserProfile(userAuth)\n\n  //         userRef.onSnapshot(snapShot => {\n  //           setCurrentUser({\n  //               id: snapShot.id,\n  //               ...snapShot.data()\n  //           }) \n  //         })\n  //       }\n\n  //     setCurrentUser(userAuth);\n  //     // addCollectionAndDocuments('collections', collectionsArray.map(({title, items}) => ({title,items})));\n\n  //   });\n  // }\n\n  // componentWillUnmount(){\n  //   this.unsubscribeFromAuth();\n  // } \n\n   return( <div className=\"App\">\n    <Header></Header>\n      <Switch>\n        <Route exact path='/' component={HomePage}></Route>\n        <Route path='/shop' component={ShopPage}></Route>\n        <Route path='/sign-in' render={ () => currentUser ? (<Redirect to='/' />) : (<SignInAndSignUp />)}></Route>\n        <Route exact path='/checkout' component={CheckoutPage}></Route>\n      </Switch>\n    </div>\n   );\n}\n\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n  // collectionsArray: selectCollectionsForPreview\n\n})\n\n\nconst mapDispatchToProps = dispatch => ({\n  // setCurrentUser: user => dispatch(setCurrentUser(user))\n  checkUserSession: () => dispatch(checkUserSession())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}