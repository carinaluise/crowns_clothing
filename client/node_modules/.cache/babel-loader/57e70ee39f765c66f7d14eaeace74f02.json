{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const updateCollections = collectionsMap => ({\n  type: ShopActionTypes.UPDATE_COLLECTIONS,\n  payload: collectionsMap\n});\nexport const fetchCollectionStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    this.unsubscribeFromSnapShot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/carinarobinson/Desktop/React_Developer_Course/E-commerce/crown_clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","updateCollections","collectionsMap","type","UPDATE_COLLECTIONS","payload","fetchCollectionStart","FETCH_COLLECTIONS_START","fetchCollectionStartAsync","dispatch","collectionRef","collection","unsubscribeFromSnapShot","onSnapshot","snapshot","setState","loading"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AAGA,OAAO,MAAMC,iBAAiB,GAAIC,cAAD,KAAqB;AAEtDC,EAAAA,IAAI,EAAEL,eAAe,CAACM,kBAFgC;AAGtDC,EAAAA,OAAO,EAAEH;AAH6C,CAArB,CAA1B;AAMP,OAAO,MAAMI,oBAAoB,GAAG,OAAO;AACvCH,EAAAA,IAAI,EAAEL,eAAe,CAACS;AADiB,CAAP,CAA7B;AAIP,OAAO,MAAMC,yBAAyB,GAAG,MAAM;AAC3C,SAAOC,QAAQ,IAAI;AAEf,UAAMC,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,aAArB,CAAtB;AAEA,SAAKC,uBAAL,GAA+BF,aAAa,CAACG,UAAd,CAA0B,MAAMC,QAAN,IAAkB;AAC3E,YAAMZ,cAAc,GAAGF,+BAA+B,CAACc,QAAD,CAAtD;AACAb,MAAAA,iBAAiB,CAACC,cAAD,CAAjB;AACA,WAAKa,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAG;AAAX,OAAd;AACP,KAJsC,CAA/B;AAMH,GAVD;AAWH,CAZM","sourcesContent":["import ShopActionTypes from './shop.types';\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\n\n\nexport const updateCollections = (collectionsMap) => ({\n\ntype: ShopActionTypes.UPDATE_COLLECTIONS,\npayload: collectionsMap\n})\n\nexport const fetchCollectionStart = () => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\n\nexport const fetchCollectionStartAsync = () => {\n    return dispatch => {\n        \n        const collectionRef = firestore.collection('collections')\n\n        this.unsubscribeFromSnapShot = collectionRef.onSnapshot( async snapshot => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n        updateCollections(collectionsMap)\n        this.setState({loading : false});\n})\n\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}