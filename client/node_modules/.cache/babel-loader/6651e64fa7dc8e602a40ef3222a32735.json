{"ast":null,"code":"var _jsxFileName = \"/Users/carinarobinson/Desktop/React_Developer_Course/E-commerce/crown_clothing/src/components/sign-in/sign-in.component.jsx\";\nimport React from 'react';\nimport './sign-in.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../button/button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport { connect } from 'react-redux'; // import {auth} from '../../firebase/firebase.utils';\n\nclass SignIn extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n      const {\n        emailSignInStart\n      } = this.props;\n      emailSignInStart(email, password); // try {\n      //   await auth.signInWithEmailAndPassword(email, password);\n      //   this.setState({\n      //     email: '' , password: ''\n      // })\n      // } catch (error) {\n      //   console.error(error)\n      // }\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }\n    }, \" Sign In \"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      handleChange: this.handleChange,\n      value: this.state.email,\n      label: \"Email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      handleChange: this.handleChange,\n      value: this.state.password,\n      label: \"Password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }\n    }, \"Sign In\"), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }\n    }, \"Sign In with Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: () => dispatch(emailSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/carinarobinson/Desktop/React_Developer_Course/E-commerce/crown_clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","FormInput","CustomButton","googleSignInStart","emailSignInStart","connect","SignIn","Component","constructor","handleSubmit","event","preventDefault","email","password","state","props","handleChange","value","name","target","setState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './sign-in.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../button/button.component';\nimport {googleSignInStart, emailSignInStart} from '../../redux/user/user.actions';\nimport {connect} from 'react-redux';\n// import {auth} from '../../firebase/firebase.utils';\n\n\nclass SignIn extends React.Component{\n\nconstructor(){\nsuper();\n\n    this.state = {\n\n        email: '',\n        password: ''\n\n    }\n\n}\n\nhandleSubmit = async event => {\n\nevent.preventDefault();\n\nconst{email, password}= this.state;\nconst {emailSignInStart} = this.props;\n\nemailSignInStart(email, password);\n\n// try {\n//   await auth.signInWithEmailAndPassword(email, password);\n\n//   this.setState({\n//     email: '' , password: ''\n// })\n\n// } catch (error) {\n//   console.error(error)\n// }\n\n}\n\nhandleChange = event => {\n\nconst {value, name} = event.target;\n\nthis.setState({[name] : value})\n\n}\n \nrender() {\n\n  const {googleSignInStart} = this.props;\n\n  return( <div className=\"sign-in\">\n\n    <h1> Sign In </h1>\n\n    <form onSubmit={this.handleSubmit}>\n      <FormInput\n      name='email'\n      type='email'\n      handleChange={this.handleChange}\n      value={this.state.email}\n      label=\"Email\"\n      required\n      ></FormInput>    \n\n      <FormInput\n      name='password'\n      type='password'\n      handleChange={this.handleChange}\n      value={this.state.password}\n      label=\"Password\"\n      required\n      ></FormInput>    \n\n\n  <div className=\"buttons\">\n    <CustomButton type=\"submit\">Sign In</CustomButton>\n    <CustomButton type=\"button\" onClick={googleSignInStart} isGoogleSignIn >Sign In with Google</CustomButton>\n    \n  </div>\n\n  </form>\n    </div>\n  )}\n\n}\n\n\nconst mapDispatchToProps = dispatch => ({\n    googleSignInStart: ()=> dispatch(googleSignInStart()),\n    emailSignInStart: () => dispatch(emailSignInStart())\n})\n\n\n\n\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}